{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhama\\\\Downloads\\\\jabi_platform_full_end_to_end\\\\frontend\\\\src\\\\pages\\\\PythonEditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Navbar from '../components/Navbar';\n\n// A simple Python editor simulation.  Users can edit the preloaded code\n// and click \"Run\" to see a dummy output.  Real execution is not\n// implemented for security reasons.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PythonEditorPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [code, setCode] = useState('print(\"Hello Healthcare AI\")');\n  const [output, setOutput] = useState('');\n  const handleRun = () => {\n    // Simulate code execution.  A real implementation would call a\n    // backend service to execute the Python code.\n    setOutput('Hello Healthcare AI');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Python Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        children: [\"You are practicing for workshop #\", id, \". Edit the code below and click run to see the simulated output.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Python Code\",\n          multiline: true,\n          minRows: 6,\n          value: code,\n          onChange: e => setCode(e.target.value),\n          fullWidth: true,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          onClick: handleRun,\n          children: \"Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), output && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              backgroundColor: '#f5f5f5'\n            },\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(PythonEditorPage, \"4/C0aPFBSQQwKN6ZjCg8T4VGIJ0=\", false, function () {\n  return [useParams];\n});\n_c = PythonEditorPage;\nvar _c;\n$RefreshReg$(_c, \"PythonEditorPage\");","map":{"version":3,"names":["React","useState","useParams","Box","Typography","TextField","Button","Paper","Navbar","jsxDEV","_jsxDEV","PythonEditorPage","_s","id","code","setCode","output","setOutput","handleRun","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","variant","gutterBottom","mb","label","multiline","minRows","value","onChange","e","target","fullWidth","mt","onClick","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/dhama/Downloads/jabi_platform_full_end_to_end/frontend/src/pages/PythonEditorPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Navbar from '../components/Navbar';\n\n// A simple Python editor simulation.  Users can edit the preloaded code\n// and click \"Run\" to see a dummy output.  Real execution is not\n// implemented for security reasons.\nexport default function PythonEditorPage() {\n  const { id } = useParams();\n  const [code, setCode] = useState('print(\"Hello Healthcare AI\")');\n  const [output, setOutput] = useState('');\n\n  const handleRun = () => {\n    // Simulate code execution.  A real implementation would call a\n    // backend service to execute the Python code.\n    setOutput('Hello Healthcare AI');\n  };\n\n  return (\n    <Box>\n      <Navbar />\n      <Box sx={{ p: 3 }}>\n        <Typography variant=\"h5\" gutterBottom>Python Editor</Typography>\n        <Typography variant=\"body2\" gutterBottom>\n          You are practicing for workshop #{id}. Edit the code below and click\n          run to see the simulated output.\n        </Typography>\n        <Paper sx={{ p: 2, mb: 2 }}>\n          <TextField\n            label=\"Python Code\"\n            multiline\n            minRows={6}\n            value={code}\n            onChange={(e) => setCode(e.target.value)}\n            fullWidth\n            variant=\"outlined\"\n          />\n          <Button variant=\"contained\" sx={{ mt: 2 }} onClick={handleRun}>Run</Button>\n          {output && (\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"subtitle1\">Output:</Typography>\n              <Paper sx={{ p: 2, backgroundColor: '#f5f5f5' }}>{output}</Paper>\n            </Box>\n          )}\n        </Paper>\n      </Box>\n    </Box>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}