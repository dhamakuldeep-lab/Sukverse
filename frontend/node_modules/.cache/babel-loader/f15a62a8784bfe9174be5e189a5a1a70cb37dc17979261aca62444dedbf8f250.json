{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhama\\\\Downloads\\\\jabi_platform_full_end_to_end\\\\frontend\\\\src\\\\pages\\\\FinalQuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Navbar from '../components/Navbar';\nimport workshops from '../data/workshops';\n\n/**\n * Certification quiz page.  The user answers all questions without\n * feedback and then submits to view their score.  Upon submission\n * they are navigated to the certificate page.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FinalQuizPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const workshop = workshops.find(w => w.id.toString() === id);\n  if (!workshop) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Workshop not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  const questions = workshop.finalQuestions;\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const handleSelect = (qid, option) => {\n    setAnswers({\n      ...answers,\n      [qid]: option\n    });\n  };\n  const handleSubmit = () => {\n    // Calculate score\n    let correct = 0;\n    questions.forEach(q => {\n      if (answers[q.id] === q.answer) {\n        correct += 1;\n      }\n    });\n    setScore(correct);\n    setSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        maxWidth: 600,\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Certification Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), submitted ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          gutterBottom: true,\n          children: [\"You scored \", score, \" out of \", questions.length, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => navigate(`/workshops/${id}/certificate`),\n          children: \"View Certificate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [questions.map((q, index) => /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Question \", index + 1, \" of \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              gutterBottom: true,\n              children: q.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              value: answers[q.id] || '',\n              onChange: e => handleSelect(q.id, e.target.value),\n              children: Object.entries(q.options).map(([key, text]) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: key,\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 36\n                }, this),\n                label: `${key}: ${text}`\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSubmit,\n          disabled: Object.keys(answers).length !== questions.length,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(FinalQuizPage, \"EMLa5O0a2ox1+ftb0gDSF7dIVZ0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FinalQuizPage;\nvar _c;\n$RefreshReg$(_c, \"FinalQuizPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Box","Typography","Button","Radio","RadioGroup","FormControlLabel","Card","CardContent","Navbar","workshops","jsxDEV","_jsxDEV","FinalQuizPage","_s","id","navigate","workshop","find","w","toString","sx","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","questions","finalQuestions","answers","setAnswers","submitted","setSubmitted","score","setScore","handleSelect","qid","option","handleSubmit","correct","forEach","q","answer","maxWidth","margin","gutterBottom","length","onClick","map","index","mb","question","value","onChange","e","target","Object","entries","options","key","text","control","label","disabled","keys","_c","$RefreshReg$"],"sources":["C:/Users/dhama/Downloads/jabi_platform_full_end_to_end/frontend/src/pages/FinalQuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Navbar from '../components/Navbar';\nimport workshops from '../data/workshops';\n\n/**\n * Certification quiz page.  The user answers all questions without\n * feedback and then submits to view their score.  Upon submission\n * they are navigated to the certificate page.\n */\nexport default function FinalQuizPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const workshop = workshops.find((w) => w.id.toString() === id);\n\n  if (!workshop) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography variant=\"h6\">Workshop not found</Typography>\n      </Box>\n    );\n  }\n\n  const questions = workshop.finalQuestions;\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleSelect = (qid, option) => {\n    setAnswers({ ...answers, [qid]: option });\n  };\n\n  const handleSubmit = () => {\n    // Calculate score\n    let correct = 0;\n    questions.forEach((q) => {\n      if (answers[q.id] === q.answer) {\n        correct += 1;\n      }\n    });\n    setScore(correct);\n    setSubmitted(true);\n  };\n\n  return (\n    <Box>\n      <Navbar />\n      <Box sx={{ p: 3, maxWidth: 600, margin: 'auto' }}>\n        <Typography variant=\"h5\" gutterBottom>Certification Quiz</Typography>\n        {submitted ? (\n          <Box>\n            <Typography variant=\"body1\" gutterBottom>\n              You scored {score} out of {questions.length}.\n            </Typography>\n            <Button variant=\"contained\" onClick={() => navigate(`/workshops/${id}/certificate`)}>\n              View Certificate\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            {questions.map((q, index) => (\n              <Card key={q.id} sx={{ mb: 2 }}>\n                <CardContent>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Question {index + 1} of {questions.length}\n                  </Typography>\n                  <Typography variant=\"body1\" gutterBottom>\n                    {q.question}\n                  </Typography>\n                    <RadioGroup\n                      value={answers[q.id] || ''}\n                      onChange={(e) => handleSelect(q.id, e.target.value)}\n                    >\n                      {Object.entries(q.options).map(([key, text]) => (\n                        <FormControlLabel\n                          key={key}\n                          value={key}\n                          control={<Radio />}\n                          label={`${key}: ${text}`}\n                        />\n                      ))}\n                    </RadioGroup>\n                </CardContent>\n              </Card>\n            ))}\n            <Button\n              variant=\"contained\"\n              onClick={handleSubmit}\n              disabled={Object.keys(answers).length !== questions.length}\n            >\n              Submit\n            </Button>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}