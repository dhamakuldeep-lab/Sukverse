{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhama\\\\Downloads\\\\jabi_platform_full_end_to_end\\\\frontend\\\\src\\\\pages\\\\AdminSectionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport Navbar from '../components/Navbar';\nimport Sidebar from '../components/Sidebar';\nimport { getWorkshop, updateSection, createQuestion, updateQuestion, deleteQuestion } from '../api/workshopApi';\n\n/**\n * Admin page to edit a section and manage its quiz questions.  The\n * section fields (title, PPT URL, code) can be updated, and new\n * questions can be added.  Existing questions are listed with\n * options to edit or delete.  When editing a question, simple\n * inline form controls are used.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminSectionPage() {\n  _s();\n  const {\n    sectionId,\n    workshopId\n  } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [sectionTitle, setSectionTitle] = useState('');\n  const [sectionPpt, setSectionPpt] = useState('');\n  const [sectionCode, setSectionCode] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [newQ, setNewQ] = useState({\n    question: '',\n    optionA: '',\n    optionB: '',\n    optionC: '',\n    optionD: '',\n    answer: '',\n    explanation: ''\n  });\n  const [editingQId, setEditingQId] = useState(null);\n  const [editQ, setEditQ] = useState({\n    question: '',\n    options: {},\n    answer: '',\n    explanation: ''\n  });\n  useEffect(() => {\n    loadSection();\n  }, [sectionId, workshopId]);\n  const loadSection = async () => {\n    setLoading(true);\n    try {\n      const workshop = await getWorkshop(workshopId);\n      const section = workshop.sections.find(s => s.id.toString() === sectionId);\n      if (!section) {\n        alert('Section not found');\n        navigate(`/admin/workshops/edit/${workshopId}`);\n        return;\n      }\n      setSectionTitle(section.title || '');\n      setSectionPpt(section.ppt_url || '');\n      setSectionCode(section.code || '');\n      setQuestions(section.questions || []);\n    } catch (err) {\n      console.error('Failed to load section', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveSection = async () => {\n    try {\n      await updateSection(sectionId, {\n        title: sectionTitle,\n        ppt_url: sectionPpt,\n        code: sectionCode\n      });\n      alert('Section updated');\n      navigate(`/admin/workshops/edit/${workshopId}`);\n    } catch (err) {\n      console.error('Failed to update section', err);\n      alert('Failed to update');\n    }\n  };\n  const handleAddQuestion = async () => {\n    if (!newQ.question || !newQ.optionA || !newQ.optionB || !newQ.answer) {\n      alert('Please fill at least the question, two options and answer');\n      return;\n    }\n    const payload = {\n      question: newQ.question,\n      options: {\n        A: newQ.optionA,\n        B: newQ.optionB,\n        ...(newQ.optionC ? {\n          C: newQ.optionC\n        } : {}),\n        ...(newQ.optionD ? {\n          D: newQ.optionD\n        } : {})\n      },\n      answer: newQ.answer,\n      explanation: newQ.explanation || null\n    };\n    try {\n      const created = await createQuestion(sectionId, payload);\n      setQuestions(prev => [...prev, created]);\n      setNewQ({\n        question: '',\n        optionA: '',\n        optionB: '',\n        optionC: '',\n        optionD: '',\n        answer: '',\n        explanation: ''\n      });\n    } catch (err) {\n      console.error('Failed to add question', err);\n      alert('Failed to add question');\n    }\n  };\n  const handleDeleteQuestion = async qid => {\n    if (!window.confirm('Delete this question?')) return;\n    try {\n      await deleteQuestion(qid);\n      setQuestions(prev => prev.filter(q => q.id !== qid));\n    } catch (err) {\n      console.error('Failed to delete question', err);\n      alert('Delete failed');\n    }\n  };\n  const handleEditClick = q => {\n    setEditingQId(q.id);\n    setEditQ({\n      question: q.question,\n      options: q.options,\n      answer: q.answer,\n      explanation: q.explanation || ''\n    });\n  };\n  const handleSaveQuestion = async () => {\n    try {\n      await updateQuestion(editingQId, editQ);\n      // reload questions\n      loadSection();\n      setEditingQId(null);\n    } catch (err) {\n      console.error('Failed to update question', err);\n      alert('Update failed');\n    }\n  };\n  const menuItems = [{\n    label: 'Users',\n    path: '/admin/users'\n  }, {\n    label: 'Roles',\n    path: '/admin/roles'\n  }, {\n    label: 'Workshops',\n    path: '/admin/workshops'\n  }];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      items: menuItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Edit Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Section Title\",\n        value: sectionTitle,\n        onChange: e => setSectionTitle(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"PPT URL\",\n        value: sectionPpt,\n        onChange: e => setSectionPpt(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Code\",\n        value: sectionCode,\n        onChange: e => setSectionCode(e.target.value),\n        fullWidth: true,\n        margin: \"normal\",\n        multiline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSaveSection,\n        sx: {\n          mt: 2\n        },\n        children: \"Save Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Quiz Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [questions.map(q => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: q.question,\n                secondary: `Answer: ${q.answer}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => handleEditClick(q),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  color: \"error\",\n                  onClick: () => handleDeleteQuestion(q.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, q.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)), questions.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No questions yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), editingQId && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Edit Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Question\",\n            value: editQ.question,\n            onChange: e => setEditQ(prev => ({\n              ...prev,\n              question: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), ['A', 'B', 'C', 'D'].map(key => /*#__PURE__*/_jsxDEV(TextField, {\n            label: `Option ${key}`,\n            value: editQ.options[key] || '',\n            onChange: e => setEditQ(prev => ({\n              ...prev,\n              options: {\n                ...prev.options,\n                [key]: e.target.value\n              }\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Answer (letter)\",\n            value: editQ.answer,\n            onChange: e => setEditQ(prev => ({\n              ...prev,\n              answer: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Explanation\",\n            value: editQ.explanation || '',\n            onChange: e => setEditQ(prev => ({\n              ...prev,\n              explanation: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleSaveQuestion,\n            sx: {\n              mt: 1\n            },\n            children: \"Save Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            onClick: () => setEditingQId(null),\n            sx: {\n              mt: 1,\n              ml: 1\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Add New Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Question\",\n            value: newQ.question,\n            onChange: e => setNewQ(prev => ({\n              ...prev,\n              question: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Option A\",\n            value: newQ.optionA,\n            onChange: e => setNewQ(prev => ({\n              ...prev,\n              optionA: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Option B\",\n            value: newQ.optionB,\n            onChange: e => setNewQ(prev => ({\n              ...prev,\n              optionB: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Option C\",\n            value: newQ.optionC,\n            onChange: e => setNewQ(prev => ({\n              ...prev,\n              optionC: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Option D\",\n            value: newQ.optionD,\n            onChange: e => setNewQ(prev => ({\n              ...prev,\n              optionD: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Answer (letter)\",\n            value: newQ.answer,\n            onChange: e => setNewQ(prev => ({\n              ...prev,\n              answer: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Explanation\",\n            value: newQ.explanation,\n            onChange: e => setNewQ(prev => ({\n              ...prev,\n              explanation: e.target.value\n            })),\n            fullWidth: true,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleAddQuestion,\n            sx: {\n              mt: 1\n            },\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminSectionPage, \"g/1put4uxm96McjZNfOacU2l3MQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AdminSectionPage;\nvar _c;\n$RefreshReg$(_c, \"AdminSectionPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Box","Typography","TextField","Button","List","ListItem","ListItemText","Divider","Navbar","Sidebar","getWorkshop","updateSection","createQuestion","updateQuestion","deleteQuestion","jsxDEV","_jsxDEV","AdminSectionPage","_s","sectionId","workshopId","navigate","loading","setLoading","sectionTitle","setSectionTitle","sectionPpt","setSectionPpt","sectionCode","setSectionCode","questions","setQuestions","newQ","setNewQ","question","optionA","optionB","optionC","optionD","answer","explanation","editingQId","setEditingQId","editQ","setEditQ","options","loadSection","workshop","section","sections","find","s","id","toString","alert","title","ppt_url","code","err","console","error","handleSaveSection","handleAddQuestion","payload","A","B","C","D","created","prev","handleDeleteQuestion","qid","window","confirm","filter","q","handleEditClick","handleSaveQuestion","menuItems","label","path","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","items","component","flexGrow","p","variant","gutterBottom","value","onChange","e","target","fullWidth","margin","multiline","onClick","mt","map","Fragment","primary","secondary","size","color","length","key","ml","_c","$RefreshReg$"],"sources":["C:/Users/dhama/Downloads/jabi_platform_full_end_to_end/frontend/src/pages/AdminSectionPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport Navbar from '../components/Navbar';\nimport Sidebar from '../components/Sidebar';\nimport {\n  getWorkshop,\n  updateSection,\n  createQuestion,\n  updateQuestion,\n  deleteQuestion,\n} from '../api/workshopApi';\n\n/**\n * Admin page to edit a section and manage its quiz questions.  The\n * section fields (title, PPT URL, code) can be updated, and new\n * questions can be added.  Existing questions are listed with\n * options to edit or delete.  When editing a question, simple\n * inline form controls are used.\n */\nexport default function AdminSectionPage() {\n  const { sectionId, workshopId } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [sectionTitle, setSectionTitle] = useState('');\n  const [sectionPpt, setSectionPpt] = useState('');\n  const [sectionCode, setSectionCode] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [newQ, setNewQ] = useState({ question: '', optionA: '', optionB: '', optionC: '', optionD: '', answer: '', explanation: '' });\n  const [editingQId, setEditingQId] = useState(null);\n  const [editQ, setEditQ] = useState({ question: '', options: {}, answer: '', explanation: '' });\n\n  useEffect(() => {\n    loadSection();\n  }, [sectionId, workshopId]);\n\n  const loadSection = async () => {\n    setLoading(true);\n    try {\n      const workshop = await getWorkshop(workshopId);\n      const section = workshop.sections.find((s) => s.id.toString() === sectionId);\n      if (!section) {\n        alert('Section not found');\n        navigate(`/admin/workshops/edit/${workshopId}`);\n        return;\n      }\n      setSectionTitle(section.title || '');\n      setSectionPpt(section.ppt_url || '');\n      setSectionCode(section.code || '');\n      setQuestions(section.questions || []);\n    } catch (err) {\n      console.error('Failed to load section', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveSection = async () => {\n    try {\n      await updateSection(sectionId, { title: sectionTitle, ppt_url: sectionPpt, code: sectionCode });\n      alert('Section updated');\n      navigate(`/admin/workshops/edit/${workshopId}`);\n    } catch (err) {\n      console.error('Failed to update section', err);\n      alert('Failed to update');\n    }\n  };\n\n  const handleAddQuestion = async () => {\n    if (!newQ.question || !newQ.optionA || !newQ.optionB || !newQ.answer) {\n      alert('Please fill at least the question, two options and answer');\n      return;\n    }\n    const payload = {\n      question: newQ.question,\n      options: {\n        A: newQ.optionA,\n        B: newQ.optionB,\n        ...(newQ.optionC ? { C: newQ.optionC } : {}),\n        ...(newQ.optionD ? { D: newQ.optionD } : {}),\n      },\n      answer: newQ.answer,\n      explanation: newQ.explanation || null,\n    };\n    try {\n      const created = await createQuestion(sectionId, payload);\n      setQuestions((prev) => [...prev, created]);\n      setNewQ({ question: '', optionA: '', optionB: '', optionC: '', optionD: '', answer: '', explanation: '' });\n    } catch (err) {\n      console.error('Failed to add question', err);\n      alert('Failed to add question');\n    }\n  };\n\n  const handleDeleteQuestion = async (qid) => {\n    if (!window.confirm('Delete this question?')) return;\n    try {\n      await deleteQuestion(qid);\n      setQuestions((prev) => prev.filter((q) => q.id !== qid));\n    } catch (err) {\n      console.error('Failed to delete question', err);\n      alert('Delete failed');\n    }\n  };\n\n  const handleEditClick = (q) => {\n    setEditingQId(q.id);\n    setEditQ({ question: q.question, options: q.options, answer: q.answer, explanation: q.explanation || '' });\n  };\n\n  const handleSaveQuestion = async () => {\n    try {\n      await updateQuestion(editingQId, editQ);\n      // reload questions\n      loadSection();\n      setEditingQId(null);\n    } catch (err) {\n      console.error('Failed to update question', err);\n      alert('Update failed');\n    }\n  };\n\n  const menuItems = [\n    { label: 'Users', path: '/admin/users' },\n    { label: 'Roles', path: '/admin/roles' },\n    { label: 'Workshops', path: '/admin/workshops' },\n  ];\n\n  if (loading) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <Navbar />\n      <Sidebar items={menuItems} />\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Edit Section\n        </Typography>\n        <TextField\n          label=\"Section Title\"\n          value={sectionTitle}\n          onChange={(e) => setSectionTitle(e.target.value)}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          label=\"PPT URL\"\n          value={sectionPpt}\n          onChange={(e) => setSectionPpt(e.target.value)}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          label=\"Code\"\n          value={sectionCode}\n          onChange={(e) => setSectionCode(e.target.value)}\n          fullWidth\n          margin=\"normal\"\n          multiline\n        />\n        <Button variant=\"contained\" onClick={handleSaveSection} sx={{ mt: 2 }}>\n          Save Section\n        </Button>\n\n        <Box sx={{ mt: 4 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Quiz Questions\n          </Typography>\n          <List>\n            {questions.map((q) => (\n              <React.Fragment key={q.id}>\n                <ListItem>\n                  <ListItemText\n                    primary={q.question}\n                    secondary={`Answer: ${q.answer}`}\n                  />\n                  <Box>\n                    <Button size=\"small\" onClick={() => handleEditClick(q)}>Edit</Button>\n                    <Button size=\"small\" color=\"error\" onClick={() => handleDeleteQuestion(q.id)}>\n                      Delete\n                    </Button>\n                  </Box>\n                </ListItem>\n                <Divider />\n              </React.Fragment>\n            ))}\n            {questions.length === 0 && <Typography>No questions yet.</Typography>}\n          </List>\n\n          {/* Edit existing question */}\n          {editingQId && (\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"subtitle1\">Edit Question</Typography>\n              <TextField\n                label=\"Question\"\n                value={editQ.question}\n                onChange={(e) => setEditQ((prev) => ({ ...prev, question: e.target.value }))}\n                fullWidth\n                margin=\"dense\"\n              />\n              {/* Options editing: convert options object to text fields.  Only support A-D */}\n              {['A', 'B', 'C', 'D'].map((key) => (\n                <TextField\n                  key={key}\n                  label={`Option ${key}`}\n                  value={editQ.options[key] || ''}\n                  onChange={(e) =>\n                    setEditQ((prev) => ({ ...prev, options: { ...prev.options, [key]: e.target.value } }))\n                  }\n                  fullWidth\n                  margin=\"dense\"\n                />\n              ))}\n              <TextField\n                label=\"Answer (letter)\"\n                value={editQ.answer}\n                onChange={(e) => setEditQ((prev) => ({ ...prev, answer: e.target.value }))}\n                fullWidth\n                margin=\"dense\"\n              />\n              <TextField\n                label=\"Explanation\"\n                value={editQ.explanation || ''}\n                onChange={(e) => setEditQ((prev) => ({ ...prev, explanation: e.target.value }))}\n                fullWidth\n                margin=\"dense\"\n              />\n              <Button variant=\"contained\" onClick={handleSaveQuestion} sx={{ mt: 1 }}>\n                Save Question\n              </Button>\n              <Button variant=\"text\" onClick={() => setEditingQId(null)} sx={{ mt: 1, ml: 1 }}>\n                Cancel\n              </Button>\n            </Box>\n          )}\n\n          {/* Add new question */}\n          <Box sx={{ mt: 4 }}>\n            <Typography variant=\"subtitle1\">Add New Question</Typography>\n            <TextField\n              label=\"Question\"\n              value={newQ.question}\n              onChange={(e) => setNewQ((prev) => ({ ...prev, question: e.target.value }))}\n              fullWidth\n              margin=\"dense\"\n            />\n            <TextField\n              label=\"Option A\"\n              value={newQ.optionA}\n              onChange={(e) => setNewQ((prev) => ({ ...prev, optionA: e.target.value }))}\n              fullWidth\n              margin=\"dense\"\n            />\n            <TextField\n              label=\"Option B\"\n              value={newQ.optionB}\n              onChange={(e) => setNewQ((prev) => ({ ...prev, optionB: e.target.value }))}\n              fullWidth\n              margin=\"dense\"\n            />\n            <TextField\n              label=\"Option C\"\n              value={newQ.optionC}\n              onChange={(e) => setNewQ((prev) => ({ ...prev, optionC: e.target.value }))}\n              fullWidth\n              margin=\"dense\"\n            />\n            <TextField\n              label=\"Option D\"\n              value={newQ.optionD}\n              onChange={(e) => setNewQ((prev) => ({ ...prev, optionD: e.target.value }))}\n              fullWidth\n              margin=\"dense\"\n            />\n            <TextField\n              label=\"Answer (letter)\"\n              value={newQ.answer}\n              onChange={(e) => setNewQ((prev) => ({ ...prev, answer: e.target.value }))}\n              fullWidth\n              margin=\"dense\"\n            />\n            <TextField\n              label=\"Explanation\"\n              value={newQ.explanation}\n              onChange={(e) => setNewQ((prev) => ({ ...prev, explanation: e.target.value }))}\n              fullWidth\n              margin=\"dense\"\n            />\n            <Button variant=\"outlined\" onClick={handleAddQuestion} sx={{ mt: 1 }}>\n              Add Question\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}