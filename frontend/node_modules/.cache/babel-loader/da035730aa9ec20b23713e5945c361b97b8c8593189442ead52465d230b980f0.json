{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhama\\\\Downloads\\\\jabi_platform_full_end_to_end\\\\frontend\\\\src\\\\pages\\\\WorkshopFlowDesigner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport ReactFlow, { ReactFlowProvider, addEdge, MiniMap, Controls, Background } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypesList = [{\n  type: \"introduction\",\n  label: \"📖 Introduction\"\n}, {\n  type: \"concept\",\n  label: \"💡 Concept\"\n}, {\n  type: \"quiz\",\n  label: \"❓ Quiz\"\n}, {\n  type: \"code\",\n  label: \"💻 Code Editor\"\n}, {\n  type: \"certificate\",\n  label: \"🏆 Certificate\"\n}];\nconst initialNodes = [{\n  id: \"start\",\n  type: \"input\",\n  position: {\n    x: 250,\n    y: 50\n  },\n  data: {\n    label: \"🚀 Start Workshop\"\n  }\n}];\nexport default function WorkshopFlowDesigner() {\n  _s();\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState([]);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const addNode = type => {\n    const newNode = {\n      id: `${type}-${nodes.length + 1}`,\n      position: {\n        x: Math.random() * 600,\n        y: Math.random() * 400\n      },\n      data: {\n        label: nodeTypesList.find(n => n.type === type).label\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n  };\n  const saveFlow = () => {\n    const flowData = {\n      nodes,\n      edges\n    };\n    console.log(\"✅ Flow Saved:\", flowData);\n    alert(\"Flow Saved! Check console for data.\");\n    // Here you can POST this data to backend using axios\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 200,\n        padding: 10,\n        borderRight: \"1px solid #ccc\",\n        background: \"#f8f8f8\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Blocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nodeTypesList.map(node => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode(node.type),\n        style: {\n          width: \"100%\",\n          marginBottom: 10,\n          padding: \"8px 5px\",\n          cursor: \"pointer\"\n        },\n        children: node.label\n      }, node.type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveFlow,\n        style: {\n          width: \"100%\",\n          background: \"#1976d2\",\n          color: \"#fff\",\n          padding: \"10px\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"\\u2705 Save Flow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: setNodes,\n          onEdgesChange: setEdges,\n          onConnect: onConnect,\n          fitView: true,\n          children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkshopFlowDesigner, \"sN2ZQ82a4TbMtEbMMrGPp1kLVzY=\");\n_c = WorkshopFlowDesigner;\nvar _c;\n$RefreshReg$(_c, \"WorkshopFlowDesigner\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","ReactFlowProvider","addEdge","MiniMap","Controls","Background","jsxDEV","_jsxDEV","nodeTypesList","type","label","initialNodes","id","position","x","y","data","WorkshopFlowDesigner","_s","nodes","setNodes","edges","setEdges","onConnect","params","eds","addNode","newNode","length","Math","random","find","n","nds","saveFlow","flowData","console","log","alert","style","display","height","children","width","padding","borderRight","background","fileName","_jsxFileName","lineNumber","columnNumber","map","node","onClick","marginBottom","cursor","color","border","flexGrow","onNodesChange","onEdgesChange","fitView","_c","$RefreshReg$"],"sources":["C:/Users/dhama/Downloads/jabi_platform_full_end_to_end/frontend/src/pages/WorkshopFlowDesigner.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\nconst nodeTypesList = [\r\n  { type: \"introduction\", label: \"📖 Introduction\" },\r\n  { type: \"concept\", label: \"💡 Concept\" },\r\n  { type: \"quiz\", label: \"❓ Quiz\" },\r\n  { type: \"code\", label: \"💻 Code Editor\" },\r\n  { type: \"certificate\", label: \"🏆 Certificate\" },\r\n];\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: \"start\",\r\n    type: \"input\",\r\n    position: { x: 250, y: 50 },\r\n    data: { label: \"🚀 Start Workshop\" },\r\n  },\r\n];\r\n\r\nexport default function WorkshopFlowDesigner() {\r\n  const [nodes, setNodes] = useState(initialNodes);\r\n  const [edges, setEdges] = useState([]);\r\n\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    []\r\n  );\r\n\r\n  const addNode = (type) => {\r\n    const newNode = {\r\n      id: `${type}-${nodes.length + 1}`,\r\n      position: { x: Math.random() * 600, y: Math.random() * 400 },\r\n      data: { label: nodeTypesList.find((n) => n.type === type).label },\r\n    };\r\n    setNodes((nds) => [...nds, newNode]);\r\n  };\r\n\r\n  const saveFlow = () => {\r\n    const flowData = { nodes, edges };\r\n    console.log(\"✅ Flow Saved:\", flowData);\r\n    alert(\"Flow Saved! Check console for data.\");\r\n    // Here you can POST this data to backend using axios\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n      {/* Left Sidebar */}\r\n      <div\r\n        style={{\r\n          width: 200,\r\n          padding: 10,\r\n          borderRight: \"1px solid #ccc\",\r\n          background: \"#f8f8f8\",\r\n        }}\r\n      >\r\n        <h4>Blocks</h4>\r\n        {nodeTypesList.map((node) => (\r\n          <button\r\n            key={node.type}\r\n            onClick={() => addNode(node.type)}\r\n            style={{\r\n              width: \"100%\",\r\n              marginBottom: 10,\r\n              padding: \"8px 5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {node.label}\r\n          </button>\r\n        ))}\r\n\r\n        <button\r\n          onClick={saveFlow}\r\n          style={{\r\n            width: \"100%\",\r\n            background: \"#1976d2\",\r\n            color: \"#fff\",\r\n            padding: \"10px\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          ✅ Save Flow\r\n        </button>\r\n      </div>\r\n\r\n      {/* Flow Canvas */}\r\n      <div style={{ flexGrow: 1 }}>\r\n        <ReactFlowProvider>\r\n          <ReactFlow\r\n            nodes={nodes}\r\n            edges={edges}\r\n            onNodesChange={setNodes}\r\n            onEdgesChange={setEdges}\r\n            onConnect={onConnect}\r\n            fitView\r\n          >\r\n            <MiniMap />\r\n            <Controls />\r\n            <Background />\r\n          </ReactFlow>\r\n        </ReactFlowProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,SAAS,IACdC,iBAAiB,EACjBC,OAAO,EACPC,OAAO,EACPC,QAAQ,EACRC,UAAU,QACL,WAAW;AAClB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAG,CACpB;EAAEC,IAAI,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAkB,CAAC,EAClD;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAa,CAAC,EACxC;EAAED,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAS,CAAC,EACjC;EAAED,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAiB,CAAC,EACzC;EAAED,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAiB,CAAC,CACjD;AAED,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,OAAO;EACXH,IAAI,EAAE,OAAO;EACbI,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC;EAC3BC,IAAI,EAAE;IAAEN,KAAK,EAAE;EAAoB;AACrC,CAAC,CACF;AAED,eAAe,SAASO,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAACa,YAAY,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMyB,SAAS,GAAGxB,WAAW,CAC1ByB,MAAM,IAAKF,QAAQ,CAAEG,GAAG,IAAKvB,OAAO,CAACsB,MAAM,EAAEC,GAAG,CAAC,CAAC,EACnD,EACF,CAAC;EAED,MAAMC,OAAO,GAAIjB,IAAI,IAAK;IACxB,MAAMkB,OAAO,GAAG;MACdf,EAAE,EAAE,GAAGH,IAAI,IAAIU,KAAK,CAACS,MAAM,GAAG,CAAC,EAAE;MACjCf,QAAQ,EAAE;QAAEC,CAAC,EAAEe,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;QAAEf,CAAC,EAAEc,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;MAAI,CAAC;MAC5Dd,IAAI,EAAE;QAAEN,KAAK,EAAEF,aAAa,CAACuB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACvB,IAAI,KAAKA,IAAI,CAAC,CAACC;MAAM;IAClE,CAAC;IACDU,QAAQ,CAAEa,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAEN,OAAO,CAAC,CAAC;EACtC,CAAC;EAED,MAAMO,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,QAAQ,GAAG;MAAEhB,KAAK;MAAEE;IAAM,CAAC;IACjCe,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;IACtCG,KAAK,CAAC,qCAAqC,CAAC;IAC5C;EACF,CAAC;EAED,oBACE/B,OAAA;IAAKgC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAE/CnC,OAAA;MACEgC,KAAK,EAAE;QACLI,KAAK,EAAE,GAAG;QACVC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE,gBAAgB;QAC7BC,UAAU,EAAE;MACd,CAAE;MAAAJ,QAAA,gBAEFnC,OAAA;QAAAmC,QAAA,EAAI;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACd1C,aAAa,CAAC2C,GAAG,CAAEC,IAAI,iBACtB7C,OAAA;QAEE8C,OAAO,EAAEA,CAAA,KAAM3B,OAAO,CAAC0B,IAAI,CAAC3C,IAAI,CAAE;QAClC8B,KAAK,EAAE;UACLI,KAAK,EAAE,MAAM;UACbW,YAAY,EAAE,EAAE;UAChBV,OAAO,EAAE,SAAS;UAClBW,MAAM,EAAE;QACV,CAAE;QAAAb,QAAA,EAEDU,IAAI,CAAC1C;MAAK,GATN0C,IAAI,CAAC3C,IAAI;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUR,CACT,CAAC,eAEF3C,OAAA;QACE8C,OAAO,EAAEnB,QAAS;QAClBK,KAAK,EAAE;UACLI,KAAK,EAAE,MAAM;UACbG,UAAU,EAAE,SAAS;UACrBU,KAAK,EAAE,MAAM;UACbZ,OAAO,EAAE,MAAM;UACfa,MAAM,EAAE,MAAM;UACdF,MAAM,EAAE;QACV,CAAE;QAAAb,QAAA,EACH;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN3C,OAAA;MAAKgC,KAAK,EAAE;QAAEmB,QAAQ,EAAE;MAAE,CAAE;MAAAhB,QAAA,eAC1BnC,OAAA,CAACN,iBAAiB;QAAAyC,QAAA,eAChBnC,OAAA,CAACP,SAAS;UACRmB,KAAK,EAAEA,KAAM;UACbE,KAAK,EAAEA,KAAM;UACbsC,aAAa,EAAEvC,QAAS;UACxBwC,aAAa,EAAEtC,QAAS;UACxBC,SAAS,EAAEA,SAAU;UACrBsC,OAAO;UAAAnB,QAAA,gBAEPnC,OAAA,CAACJ,OAAO;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACX3C,OAAA,CAACH,QAAQ;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACZ3C,OAAA,CAACF,UAAU;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChC,EAAA,CAtFuBD,oBAAoB;AAAA6C,EAAA,GAApB7C,oBAAoB;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}