{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhama\\\\Downloads\\\\jabi_platform_full_end_to_end\\\\frontend\\\\src\\\\pages\\\\ForgotPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport { forgotPassword } from '../api/authApi';\n\n// Simple forgot password page.  It collects an email and displays a\n// confirmation message.  No actual reset functionality is implemented.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPasswordPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await forgotPassword(email);\n      setSubmitted(true);\n    } catch (err) {\n      console.error('Failed to initiate password reset', err);\n      alert('Failed to initiate password reset: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      backgroundColor: '#f5f5f5'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        width: 360\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), !submitted ? /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Enter your email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          fullWidth: true,\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Back to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2\n        },\n        children: [\"If an account exists for \", email, \", a password reset link has been sent.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPasswordPage, \"77YcRx86nYJXLJuPvA7ar5BPIqU=\");\n_c = ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","Link","Box","TextField","Button","Typography","Paper","forgotPassword","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","submitted","setSubmitted","handleSubmit","e","preventDefault","err","console","error","alert","message","sx","display","justifyContent","alignItems","minHeight","backgroundColor","children","elevation","p","width","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","mt","label","type","value","onChange","target","fullWidth","margin","required","color","to","_c","$RefreshReg$"],"sources":["C:/Users/dhama/Downloads/jabi_platform_full_end_to_end/frontend/src/pages/ForgotPasswordPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\n\nimport { forgotPassword } from '../api/authApi';\n\n// Simple forgot password page.  It collects an email and displays a\n// confirmation message.  No actual reset functionality is implemented.\nexport default function ForgotPasswordPage() {\n  const [email, setEmail] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await forgotPassword(email);\n      setSubmitted(true);\n    } catch (err) {\n      console.error('Failed to initiate password reset', err);\n      alert('Failed to initiate password reset: ' + err.message);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh', backgroundColor: '#f5f5f5' }}>\n      <Paper elevation={3} sx={{ p: 4, width: 360 }}>\n        <Typography variant=\"h5\" gutterBottom>Forgot Password</Typography>\n        {!submitted ? (\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\n            <TextField\n              label=\"Enter your email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              fullWidth\n              margin=\"normal\"\n              required\n            />\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ mt: 2 }}>\n              Reset Password\n            </Button>\n            <Box sx={{ mt: 1 }}>\n              <Link to=\"/login\">Back to Login</Link>\n            </Box>\n          </Box>\n        ) : (\n          <Typography sx={{ mt: 2 }}>If an account exists for {email}, a password reset link has been sent.</Typography>\n        )}\n      </Paper>\n    </Box>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}