{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhama\\\\Downloads\\\\jabi_platform_full_end_to_end\\\\frontend\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Navbar from '../components/Navbar';\nimport workshops from '../data/workshops';\n\n/**\n * Practice quiz page for a workshop.  Shows one question at a time with\n * multiple choice answers and instant feedback.  After completing\n * all questions the user is encouraged to proceed to the final\n * certification quiz.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const workshop = workshops.find(w => w.id.toString() === id);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selected, setSelected] = useState('');\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  if (!workshop) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Workshop not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n  const questions = workshop.questions;\n  const question = questions[currentIndex];\n  const handleSubmit = () => {\n    // Check if selected answer is correct\n    const correct = selected === question.answer;\n    setIsCorrect(correct);\n    setShowFeedback(true);\n  };\n  const handleNext = () => {\n    // Reset feedback and move to next question\n    setShowFeedback(false);\n    setSelected('');\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      // If last question, navigate to final quiz page or show completion message\n      navigate(`/workshops/${id}/final-quiz`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        maxWidth: 600,\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Practice Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            gutterBottom: true,\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            value: selected,\n            onChange: e => setSelected(e.target.value),\n            children: Object.entries(question.options).map(([key, text]) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: key,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 28\n              }, this),\n              label: `${key}: ${text}`,\n              disabled: showFeedback\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), !showFeedback ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleSubmit,\n            disabled: !selected,\n            sx: {\n              mt: 2\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: isCorrect ? 'success.main' : 'error.main',\n              children: isCorrect ? 'Correct!' : `Incorrect. The correct answer is ${question.answer}.`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: handleNext,\n              sx: {\n                mt: 1\n              },\n              children: currentIndex < questions.length - 1 ? 'Next Question' : 'Go to Certification Quiz'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"zLUw9vhWZkY4FmGsetUGBEeJtO8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Box","Typography","Button","Radio","RadioGroup","FormControlLabel","Card","CardContent","Navbar","workshops","jsxDEV","_jsxDEV","QuizPage","_s","id","navigate","workshop","find","w","toString","currentIndex","setCurrentIndex","selected","setSelected","showFeedback","setShowFeedback","isCorrect","setIsCorrect","sx","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","questions","question","handleSubmit","correct","answer","handleNext","length","maxWidth","margin","gutterBottom","value","onChange","e","target","Object","entries","options","map","key","text","control","label","disabled","onClick","mt","color","_c","$RefreshReg$"],"sources":["C:/Users/dhama/Downloads/jabi_platform_full_end_to_end/frontend/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Navbar from '../components/Navbar';\nimport workshops from '../data/workshops';\n\n/**\n * Practice quiz page for a workshop.  Shows one question at a time with\n * multiple choice answers and instant feedback.  After completing\n * all questions the user is encouraged to proceed to the final\n * certification quiz.\n */\nexport default function QuizPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const workshop = workshops.find((w) => w.id.toString() === id);\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selected, setSelected] = useState('');\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n\n  if (!workshop) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography variant=\"h6\">Workshop not found</Typography>\n      </Box>\n    );\n  }\n\n  const questions = workshop.questions;\n  const question = questions[currentIndex];\n\n  const handleSubmit = () => {\n    // Check if selected answer is correct\n    const correct = selected === question.answer;\n    setIsCorrect(correct);\n    setShowFeedback(true);\n  };\n\n  const handleNext = () => {\n    // Reset feedback and move to next question\n    setShowFeedback(false);\n    setSelected('');\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      // If last question, navigate to final quiz page or show completion message\n      navigate(`/workshops/${id}/final-quiz`);\n    }\n  };\n\n  return (\n    <Box>\n      <Navbar />\n      <Box sx={{ p: 3, maxWidth: 600, margin: 'auto' }}>\n        <Typography variant=\"h5\" gutterBottom>Practice Quiz</Typography>\n        <Card>\n          <CardContent>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Question {currentIndex + 1} of {questions.length}\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              {question.question}\n            </Typography>\n            <RadioGroup\n              value={selected}\n              onChange={(e) => setSelected(e.target.value)}\n            >\n              {Object.entries(question.options).map(([key, text]) => (\n                <FormControlLabel\n                  key={key}\n                  value={key}\n                  control={<Radio />}\n                  label={`${key}: ${text}`}\n                  disabled={showFeedback}\n                />\n              ))}\n            </RadioGroup>\n            {!showFeedback ? (\n              <Button\n                variant=\"contained\"\n                onClick={handleSubmit}\n                disabled={!selected}\n                sx={{ mt: 2 }}\n              >\n                Submit\n              </Button>\n            ) : (\n              <Box sx={{ mt: 2 }}>\n                <Typography variant=\"body2\" color={isCorrect ? 'success.main' : 'error.main'}>\n                  {isCorrect ? 'Correct!' : `Incorrect. The correct answer is ${question.answer}.`}\n                </Typography>\n                <Button variant=\"outlined\" onClick={handleNext} sx={{ mt: 1 }}>\n                  {currentIndex < questions.length - 1 ? 'Next Question' : 'Go to Certification Quiz'}\n                </Button>\n              </Box>\n            )}\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}